Заголовок

--ОбщийМодуль

&НаСервере
Функция ПолучитьТекущегоПользователя() Экспорт 
	Пользователь = ПолноеИмяПользователя();
	Возврат Пользователь;
КонецФункции



--МодульПриложения

&НаКлиенте
Процедура ПриНачалеРаботыСистемы()   
	Конфигурация = ПолучитьЗаголовокКлиентскогоПриложения(); 
	Пользователь = Общие.ПолучитьТекущегоПользователя();
	//Пользователь = ИмяПользователя();
	ДатаВремя = ТекущаяДата();
	Заголовок = Конфигурация + " / " + Пользователь + " / " + ДатаВремя;
	УстановитьЗаголовокКлиентскогоПриложения(Заголовок);	
КонецПроцедуры




ЗагрузкаФото

--ФормаЭлемента

&НаКлиенте
Процедура СсылкаНаФотоНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	// Выбор файла с просмотром
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФыбораФайла.Фильтр = "Файл JPG (*.jpg)|*.jpg|"; 
	ДиалогФыбораФайла.Заголовок = "Выберите картинку";
	ДиалогФыбораФайла.ПредварительныйПросмотр = Истина;
	ДиалогФыбораФайла.ИндексФильтра = 0;
	
	ОповещениеВыбора = Новый ОписаниеОповещения("ОкончаниеВыбораФайла", ЭтотОбъект);
	
	ДиалогФыбораФайла.Показать(ОповещениеВыбора);

КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораФайла(ВыбранныеФайлы, Параметры) Экспорт
    
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьКартинкуЗавершение", ЭтотОбъект);
    	НачатьПомещениеФайла(Оповещение, , ВыбранныеФайлы[0], Ложь, УникальныйИдентификатор);		
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
    
    Если НЕ Результат Тогда
        Возврат;
    КонецЕсли;
    
    СсылкаНаФото = Адрес;
    Модифицированность = Истина;
    
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(СсылкаНаФото) Тогда
        ТекущийОбъект.Фото = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(СсылкаНаФото));
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНаФото = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Фото");
КонецПроцедуры





Отбор

--ФормаСписка


&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	ОтборНаСервере(Отбор);
	
КонецПроцедуры

Процедура ОтборНаСервере(Строка)
	Список.Отбор.Элементы.Очистить();
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КатегорияКачества");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Строка;
	РасчётРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ОтборОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Отбор = "";
	Список.Отбор.Элементы.Очистить();
	РасчётРеквизитов();
КонецПроцедуры

Процедура РасчётРеквизитов()

	Если Отбор = Перечисления.КатегорииКачества.ПустаяСсылка() ИЛИ Отбор = "" Тогда 
    	Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(Материалы.Количество) КАК Количество,
		|	СУММА(Материалы.Цена) КАК Цена,
		|	КОЛИЧЕСТВО(Материалы.Ссылка) КАК Ссылка
		|ИЗ
		|	Справочник.Материалы КАК Материалы";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			КоличествоЗаписей = ВыборкаДетальныеЗаписи.Ссылка;
			КоличествоМатериалов = ВыборкаДетальныеЗаписи.Количество;
			СуммаМатериалов = ВыборкаДетальныеЗаписи.Цена;
		КонецЦикла;
	Иначе 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(Материалы.Количество) КАК Количество,
		|	СУММА(Материалы.Цена) КАК Цена,
		|	КОЛИЧЕСТВО(Материалы.Ссылка) КАК Ссылка
		|ИЗ
		|	Справочник.Материалы КАК Материалы
		|ГДЕ
		|	Материалы.КатегорияКачества = &Отбор";
		
		Запрос.УстановитьПараметр("Отбор", Отбор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			КоличествоЗаписей = ВыборкаДетальныеЗаписи.Ссылка;
			КоличествоМатериалов = ВыборкаДетальныеЗаписи.Количество;
			СуммаМатериалов = ВыборкаДетальныеЗаписи.Цена;
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РасчётРеквизитов();
КонецПроцедуры




Документация 

--ФормаЭлемента
&НаКлиенте
Процедура ВыбратьФайл(Команда)
	СтандартнаяОбработка = Ложь;
	// Выбор файла с просмотром
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	ДиалогФыбораФайла.Заголовок = "Выберите файл";
	ДиалогФыбораФайла.ПредварительныйПросмотр = Истина;
	ДиалогФыбораФайла.ИндексФильтра = 0;
	
	ОповещениеВыбора = Новый ОписаниеОповещения("ОкончаниеВыбораФайла", ЭтотОбъект);
	
	ДиалогФыбораФайла.Показать(ОповещениеВыбора);
КонецПроцедуры 

&НаКлиенте
Процедура ОкончаниеВыбораФайла(ВыбранныеФайлы, Параметры) Экспорт
    
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьКартинкуЗавершение", ЭтотОбъект,  ВыбранныеФайлы[0]);		
    	НачатьПомещениеФайла(Оповещение, , ВыбранныеФайлы[0], Ложь, УникальныйИдентификатор);
	   
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКартинкуЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
    
    Если НЕ Результат Тогда
        Возврат;
	КонецЕсли;
	Путь = СтрРазделить(ДополнительныеПараметры, "\");
	Наименование = Путь[Путь.Количество() - 1]; 
	Расширение = СтрРазделить(Наименование, ".")[1]; 
	Наименование = СтрРазделить(Наименование, ".")[0];
	
	ОбъектСправочник = РеквизитФормыВЗначение("Объект");
		
	Данные = Новый ДвоичныеДанные(ДополнительныеПараметры);
	
	НоваяСтрока = ОбъектСправочник.Документация.Добавить();
	НоваяСтрока.Файл = Новый ХранилищеЗначения(Данные);
	НоваяСтрока.Наименование = Наименование;
	НоваяСтрока.Расширение = Расширение;
	ОбъектСправочник.Записать();
	
	ЗначениеВРеквизитФормы(ОбъектСправочник, "Объект");
	
	
	//Строка = Объект.Документация.Добавить();
	//Строка.Адрес = ДополнительныеПараметры;
	//Строка.Наименование = Наименование;
	//Строка.Расширение = Расширение;
	//Номер = Строка.НомерСтроки;
	
    Модифицированность = Истина; 
	
	ЭтотОбъект.Записать();
	
		    
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для Каждого Строка Из Объект.Документация Цикл
		//Если ЭтоАдресВременногоХранилища(Строка.Адрес) Тогда
		//	ТекущийОбъект.Документация[Строка.НомерСтроки-1].Файл = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Строка.Адрес));
		//КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для Каждого Строка Из Объект.Документация Цикл
		Строка.Адрес = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Документация[" + Строка(Строка.НомерСтроки - 1)  + "].Файл");
		
		//ПоместитьВоВременноеХранилище(Объект.Ссылка.Документация[Строка.НомерСтроки - 1].Файл,Строка.Адрес); 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОткрытьФайлНаСервере(Строка)
	ОбъектСправочник = РеквизитФормыВЗначение("Объект");
	
	ИмяФайла = ПолучитьИмяВременногоФайла(ОбъектСправочник.Документация[Строка.Номер - 1].Расширение);
	Данные = ОбъектСправочник.Документация[Строка.Номер - 1].Файл.Получить();
	Данные.Записать(ИмяФайла);
	ЗапуститьПриложение(ИмяФайла);
	
	ЗначениеВРеквизитФормы(ОбъектСправочник, "Объект");
	
	//Имя = ПолучитьИмяВременногоФайла(Строка.Расширение);
	////Данные = Объект.Ссылка.Документация[Строка.Номер - 1].Файл.Получить(); 
	//Данные = ПолучитьИзВременногоХранилища(Строка.Адрес);
	//Данные.Записать(Имя);
	//ЗапуститьПриложение(Имя);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	Строка = Элементы.Документация.ТекущиеДанные;
	Свойства = Новый Структура;
	Свойства.Вставить("Номер", Строка.НомерСтроки);
	Свойства.Вставить("Расширение", Строка.Расширение);
	Свойства.Вставить("Адрес", Строка.Адрес);
	ОткрытьФайлНаСервере(Свойства);
КонецПроцедуры




Импорт

Excel
&НаСервере
Процедура ЗагрузитьМатериалыНаСервере(Файл)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Попытка
		ТабДок.Прочитать(Файл);	
	Исключение
		Сообщить("Не удалось прочитать файл!");
		Возврат;
	КонецПопытки;
	
	Для Строка = 2 По ТабДок.ВысотаТаблицы Цикл
		
		НоваяСтрока = СписокМатериалов.Добавить();
		
		НоваяСтрока.Артикул = ТабДок.Область(Строка, 1).Текст;
		НоваяСтрока.Наименование = ТабДок.Область(Строка, 2).Текст;
		
		ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ТабДок.Область(Строка, 3).Текст);
		
		Если ЕдиницаИзмерения.Пустая() Тогда 
			ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
			ЕдиницаИзмерения.Наименование = ТабДок.Область(Строка, 3).Текст;
			ЕдиницаИзмерения.Записать();
		КонецЕсли;
		
		НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения.Ссылка; 
		НоваяСтрока.Ширина = ТабДок.Область(Строка, 4).Текст;
		НоваяСтрока.Количество = ТабДок.Область(Строка, 5).Текст;
		
		ТипМатериала = Справочники.ТипыМатериалов.НайтиПоНаименованию(ТабДок.Область(Строка, 6).Текст);
		
		Если ТипМатериала.Пустая() Тогда 
			ТипМатериала = Справочники.ТипыМатериалов.СоздатьЭлемент();
			ТипМатериала.Наименование = ТабДок.Область(Строка, 6).Текст;
			ТипМатериала.Записать();
		КонецЕсли;

		НоваяСтрока.ТипМатериала = ТипМатериала.Ссылка;
		НоваяСтрока.Цена = ТабДок.Область(Строка, 7).Текст;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл(Команда)	
	// Выбор файла с просмотром
	ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФыбораФайла.Фильтр = "Таблица Excel 2007 (*.xlsx)|*.xlsx|Таблица Excel 97 (*.xls)|*.xls"; 
	ДиалогФыбораФайла.Заголовок = "Выберите файл";
	ДиалогФыбораФайла.ПредварительныйПросмотр = Истина;
	ДиалогФыбораФайла.ИндексФильтра = 0;
	
	ОповещениеВыбора = Новый ОписаниеОповещения("ОкончаниеВыбораФайла", ЭтотОбъект);
	
	ДиалогФыбораФайла.Показать(ОповещениеВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораФайла(ВыбранныеФайлы, Параметры) Экспорт
    
    Если ВыбранныеФайлы <> Неопределено Тогда
        
        ПутьКФайлу = ВыбранныеФайлы[0];
		ЗагрузитьМатериалыНаСервере(ПутьКФайлу);
        
    КонецЕсли;
    
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьНаСервере()
	Для Каждого Строка Из СписокМатериалов Цикл 
		Материал = Справочники.Материалы.НайтиПоНаименованию(Строка.Наименование);
		
		Если Материал.Пустая() Тогда
			Материал = Справочники.Материалы.СоздатьЭлемент();
		Иначе
			Материал = Материал.ПолучитьОбъект();
		КонецЕсли;
		
		Материал.Артикул = Строка.Артикул;
		Материал.Наименование = Строка.Наименование;
		Материал.ЕдиницаИзмерения = Строка.ЕдиницаИзмерения;
		Материал.Ширина = Строка.Ширина;
		Материал.Количество = Строка.Количество;
		Материал.ТипМатериала = Строка.ТипМатериала;
		Материал.Цена = Строка.Цена;
		Материал.Записать();
		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры


csv
Текстовый Документ
Прочитать

ПолучитьСтроку
СтрРазделить




КонтрольОстатков

ОбработкаПроведения


БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ОстаткиРесурсов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЗапросИсточник = Новый Запрос;
	ЗапросИсточник.Текст = "ВЫБРАТЬ
	                       |	СборкаСписокРесурсов.Наименование КАК Наименование
	                       |ИЗ
	                       |	Документ.Сборка.СписокРесурсов КАК СборкаСписокРесурсов
	                       |ГДЕ
	                       |	СборкаСписокРесурсов.Ссылка = &Ссылка";
	ЗапросИсточник.УстановитьПараметр("Ссылка", Ссылка);
	ИсточникНоменклатуры = ЗапросИсточник.Выполнить();
	
	ЭлементБлокировки.ИсточникДанных = ИсточникНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ресурс", "Наименование");
	БлокировкаДанных.Заблокировать();
		
	// регистр ОстаткиРесурсов Расход
	Движения.ОстаткиРесурсов.Записывать = Истина;
	Для Каждого ТекСтрокаСписокРесурсов Из СписокРесурсов Цикл
		Движение = Движения.ОстаткиРесурсов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Ресурс = ТекСтрокаСписокРесурсов.Наименование;
		Движение.Количество = ТекСтрокаСписокРесурсов.КоличествоВсего;
	КонецЦикла;
	
	Движения.Записать();
	
	
	Комплектующие = СписокРесурсов.Выгрузить(, "Наименование");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиРесурсовОстатки.Ресурс КАК Ресурс,
		|	ОстаткиРесурсовОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиРесурсовОстатки.Ресурс.ЕдиницаИзмерения КАК РесурсЕдиницаИзмерения
		|ИЗ
		|	РегистрНакопления.ОстаткиРесурсов.Остатки(, Ресурс В (&Наименование)) КАК ОстаткиРесурсовОстатки
		|ГДЕ
		|	ОстаткиРесурсовОстатки.КоличествоОстаток < 0";
	
	
	Запрос.УстановитьПараметр("Наименование", Комплектующие);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Сообщение = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.РесурсЕдиницаИзмерения = Null Тогда 
			 Сообщение = Сообщение + "Ресурса " + ВыборкаДетальныеЗаписи.Ресурс + " не хватает на складе в количестве " + Строка(ВыборкаДетальныеЗаписи.КоличествоОстаток * -1) + " шт" + Символы.ПС;
		 Иначе
			 Сообщение = Сообщение + "Ресурса " + ВыборкаДетальныеЗаписи.Ресурс + " не хватает на складе в количестве " + Строка(ВыборкаДетальныеЗаписи.КоличествоОстаток * -1) + " " + ВыборкаДетальныеЗаписи.РесурсЕдиницаИзмерения + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	Если Не Сообщение = "" Тогда 
		Отказ = Истина;
		Сообщить(Сообщение);
	КонецЕсли;
	
	// регистр ОстаткиРесурсов Приход
	Движения.ОстаткиРесурсов.Записывать = Истина;
	Движение = Движения.ОстаткиРесурсов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Ресурс = Изделие;
	Движение.Количество = Количество;
	
	Движения.Записать();




Тестирование


ЗапуститьСистему("C:\Program Files (x86)\1cv8\8.3.2.163\bin\1cv8.exe ENTERPRISE /F C:\Users\username\Documents\1C\Platform82Demo /N Администратор /TESTCLIENT");


 	
